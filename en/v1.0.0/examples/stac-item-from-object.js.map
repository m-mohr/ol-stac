{"version":3,"file":"stac-item-from-object.js","mappings":"gJAOA,E,QAAA,IAAS,KAET,MAAMA,EAAQ,IAAI,IAAK,CACrBC,IAAK,wEACLC,KAAM,CACJ,OAAU,CACR,IAAO,CACL,KACE,kGACF,YAAa,MACb,aAAc,CAAC,KAAM,OACrB,iBAAkB,CAChB,kBAAmB,iBAAmB,EAAG,mBAAoB,GAC5D,kBAEH,eAAgB,CACd,CACE,UAAa,UACb,WAAc,CACZ,QAAW,OACX,KAAQ,OACR,QAAW,MACX,OAAU,QAEZ,OAAU,QAGd,MAAS,CAAC,OAAQ,iBAClB,MAAS,wBACT,KAAQ,6DAGZ,KAAQ,CAAC,YAAa,WAAY,YAAa,YAC/C,WAAc,aACd,SAAY,CACV,YAAe,CACb,CACE,CAAC,YAAa,YACd,CAAC,UAAW,YACZ,CAAC,YAAa,WACd,CAAC,YAAa,YACd,CAAC,YAAa,cAGlB,KAAQ,WAEV,GAAM,oBACN,MAAS,CACP,CACE,KACE,yEACF,IAAO,OACP,KAAQ,qBAGZ,WAAc,CACZ,SAAY,KACZ,YACE,qQACF,aAAgB,yBAChB,UAAa,CACX,CACE,YACE,sFACF,KAAQ,kBACR,MAAS,CAAC,WAAY,YACtB,IAAO,0BAET,CACE,KAAQ,YACR,MAAS,CAAC,aACV,IAAO,0BAGX,eAAkB,yBAClB,MAAS,yBAEX,gBAAmB,CACjB,kEACA,+DAEF,aAAgB,QAChB,KAAQ,aAINC,EAAa,IAAI,IAAU,CAC/BC,OAAQ,IAAI,MAGRC,EAAM,IAAI,IAAI,CAClBC,OAAQ,MACRC,OAAQ,CAACJ,EAAYH,KAEvBA,EAAMQ,GAAG,cAAe,KACTH,EAAII,UACZC,IAAIV,EAAMW,c","sources":["webpack:///./stac-item-from-object.js"],"sourcesContent":["import Map from 'ol/Map.js';\nimport OSM from 'ol/source/OSM.js';\nimport STAC from '../src/ol/layer/STAC.js';\nimport TileLayer from 'ol/layer/WebGLTile.js';\nimport proj4 from 'proj4';\nimport {register} from 'ol/proj/proj4.js';\n\nregister(proj4); // required to support source reprojection\n\nconst layer = new STAC({\n  url: 'https://www.planet.com/data/stac/open-skysat-data/angkor-wat/dsm.json',\n  data: {\n    'assets': {\n      'dsm': {\n        'href':\n          'https://storage.googleapis.com/open-cogs/planet-stac/angkor-wat/3d-geofox.ai/angkor-wat-dsm.tif',\n        'proj:epsg': 32648,\n        'proj:shape': [8675, 36244],\n        'proj:transform': [\n          374283.8729316911, 0.699999988079071, 0, 1498553.1898692613, 0,\n          -0.699999988079071,\n        ],\n        'raster:bands': [\n          {\n            'data_type': 'float32',\n            'statistics': {\n              'maximum': 96.446,\n              'mean': 26.839,\n              'minimum': 2.095,\n              'stddev': 10.117,\n            },\n            'nodata': 'nan',\n          },\n        ],\n        'roles': ['data', 'surface-model'],\n        'title': 'Digital Surface Model',\n        'type': 'image/tiff; application=geotiff; profile=cloud-optimized',\n      },\n    },\n    'bbox': [103.8381461, 13.3233018, 103.8953104, 13.5529222],\n    'collection': 'angkor-wat',\n    'geometry': {\n      'coordinates': [\n        [\n          [103.8381461, 13.5526676],\n          [103.83925, 13.3233018],\n          [103.8953104, 13.323552],\n          [103.8942598, 13.5529222],\n          [103.8381461, 13.5526676],\n        ],\n      ],\n      'type': 'Polygon',\n    },\n    'id': 'angkor-wat-3d-dsm',\n    'links': [\n      {\n        'href':\n          'https://www.planet.com/data/stac/open-skysat-data/angkor-wat/item.json',\n        'rel': 'self',\n        'type': 'application/json',\n      },\n    ],\n    'properties': {\n      'datetime': null,\n      'description':\n        'Digital Surface Model (DSM) of Angkor Wat, Cambodia, created from stereo images captured by a [Planet](https://planet.com) SkySat satellite. It is distributed as a single band Cloud-optimized GeoTiff, with each pixel representing the height at that location.',\n      'end_datetime': '2020-12-14T03:22:28.5Z',\n      'providers': [\n        {\n          'description':\n            'Contact Planet at [planet.com/contact-sales](https://www.planet.com/contact-sales/)',\n          'name': 'Planet Labs PBC',\n          'roles': ['producer', 'licensor'],\n          'url': 'https://www.planet.com',\n        },\n        {\n          'name': 'Geofox.ai',\n          'roles': ['processor'],\n          'url': 'https://www.geofox.ai',\n        },\n      ],\n      'start_datetime': '2020-12-14T03:21:56.5Z',\n      'title': 'Digital Surface Model',\n    },\n    'stac_extensions': [\n      'https://stac-extensions.github.io/projection/v1.1.0/schema.json',\n      'https://stac-extensions.github.io/raster/v1.1.0/schema.json',\n    ],\n    'stac_version': '1.0.0',\n    'type': 'Feature',\n  },\n});\n\nconst background = new TileLayer({\n  source: new OSM(),\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [background, layer],\n});\nlayer.on('sourceready', () => {\n  const view = map.getView();\n  view.fit(layer.getExtent());\n});\n"],"names":["layer","url","data","background","source","map","target","layers","on","getView","fit","getExtent"],"sourceRoot":""}